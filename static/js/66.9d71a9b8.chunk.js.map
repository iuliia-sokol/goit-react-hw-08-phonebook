{"version":3,"file":"static/js/66.9d71a9b8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/InputItem.styled.jsx","components/ContactForm/InputItem.jsx","redux/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/ModalForm.styled.jsx","components/Modal/ModalForm.jsx","components/Modal/ModalDelete.styled.jsx","components/Modal/ModalDelete.jsx","components/Modal/Modal.jsx","components/ContactList/CotactItem.jsx","redux/filterSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 24px 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  color: #010101;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 30vw;\n    padding: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 30vw;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 14px;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","export const getContactsItems = state => state.contacts.items;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { FaUserPlus } from 'react-icons/fa';\nimport { addContact } from '../../redux/contactsOperations';\nimport { Form, Label } from './ContactForm.styled';\nimport { Btn } from '../Btn/Btn';\nimport { InputItem } from './InputItem';\nimport { notifySettings } from '../../utils/notifySettings';\nimport { getContactsItems } from 'redux/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactsItems);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning(\n        `${name} is already in contacts`,\n        notifySettings\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <Btn type=\"submit\" icon={FaUserPlus} status=\"add\" text=\"Add contact\" />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const PhoneLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    color: rgba(0, 128, 75, 0.7);\n  }\n\n  & > span {\n    font-weight: normal;\n  }\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 80px;\n  }\n`;\nexport const ListItem = styled.li`\n  /* max-width: 50vw;\n  width: 45vw; */\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  padding: 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.1);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    max-width: 50vw;\n    width: 45vw;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px;\n    font-size: 20px;\n  }\n`;\n\nexport const ListItemData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: 16px;\n  margin: 16px;\n  border-radius: 12px;\n  padding: 8px 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    max-width: 50vw;\n    width: 45vw;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 32px;\n    font-size: 20px;\n    margin: 0 36px;\n    padding: 12px 18px;\n  }\n`;\n\nexport const DataWrapper = styled.div`\n  & > span {\n    font-weight: normal;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  height: fit-content;\n  width: fit-content;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  opacity: 1;\n`;\n","import styled from 'styled-components';\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n    /* height: 120px; */\n  }\n`;\nexport const ListItem = styled.div`\n  min-width: 50vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n  padding: 32px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const ListItemForm = styled.form`\n  font-size: 20px;\n  color: #010101;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  border-radius: 12px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  min-width: 50%;\n  outline-color: yellow;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import { useState } from 'react';\nimport { FaUserCheck } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport {\n  AvatarWrapper,\n  InputWrapper,\n  Input,\n  Label,\n  ListItem,\n  ListItemForm,\n  ContentWrapper,\n} from './ModalForm.styled';\nimport Avatar from '../../images/girl.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contactsOperations';\nimport { getContactsItems } from 'redux/contactsSelectors';\nimport { notifySettings } from 'utils/notifySettings';\n\nexport const ModalForm = ({ id, closeModal }) => {\n  const contacts = useSelector(getContactsItems);\n  const currentContact = contacts.find(contact => contact.id === id);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(`${currentContact.name}`);\n  const [number, setNumber] = useState(`${currentContact.number}`);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const includesName = contacts.find(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning('No data changed', notifySettings);\n    }\n    dispatch(updateContact({ id, name, number }));\n    closeModal();\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <ListItemForm onSubmit={handleSubmit}>\n          <InputWrapper>\n            <Label>\n              Change name:\n              <Input\n                onChange={onInputChange}\n                value={name}\n                name=\"name\"\n                placeholder=\"Enter contact`s name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Label>\n            <Label>\n              Change phone:\n              <Input\n                onChange={onInputChange}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter contact`s number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Label>\n          </InputWrapper>\n          <Btn\n            icon={FaUserCheck}\n            type=\"submit\"\n            status=\"update\"\n            text=\"Update contact\"\n          />\n        </ListItemForm>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 3px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  & > img {\n    border-radius: 50%;\n    width: 150px;\n    height: 140px;\n  }\n`;\n\nexport const Hint = styled.p`\n  font-size: 16px;\n  letter-spacing: 0.03em;\n  margin: 0;\n`;\n\nexport const ListItem = styled.div`\n  min-width: 50vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n`;\n\nexport const ContentWrapper = styled.div`\n  border-radius: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n  padding: 32px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const ConfirmationText = styled.p`\n  margin: 0;\n  font-weight: normal;\n  & > span {\n    font-weight: bold;\n  }\n`;\n","import { MdDelete } from 'react-icons/md';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  AvatarWrapper,\n  ListItem,\n  ContentWrapper,\n  ConfirmationText,\n  TextWrapper,\n  Hint,\n} from './ModalDelete.styled';\nimport Avatar from '../../images/delete.gif';\nimport { Btn } from 'components/Btn/Btn';\nimport { deleteContact } from 'redux/contactsOperations';\n\nexport const ModalDeleteConfirmation = ({ id, closeModal, name }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <ContentWrapper>\n        <AvatarWrapper>\n          <img src={Avatar} alt=\"avatar\" />\n        </AvatarWrapper>\n        <TextWrapper>\n          <ConfirmationText>\n            Are you sure you want to delete <span>{name}</span> from your\n            phonebook ?\n          </ConfirmationText>\n          <Hint>This action cannot be reversed</Hint>\n          <Btn\n            icon={MdDelete}\n            type=\"button\"\n            status=\"delete\"\n            text=\"Confirm delete\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n              closeModal();\n            }}\n          />\n        </TextWrapper>\n      </ContentWrapper>\n    </ListItem>\n  );\n};\n\nModalDeleteConfirmation.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\n\nimport { ModalOverlay, ModalWindow } from './Modal.styled';\n\nimport { ModalForm } from './ModalForm';\nimport { ModalDeleteConfirmation } from './ModalDelete';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ id, closeModal, status, name }) => {\n  useEffect(() => {\n    const onEscPress = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  }, [closeModal]);\n\n  const onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={onBackdropClick}>\n      <ModalWindow>\n        {status === 'edit' ? (\n          <ModalForm id={id} closeModal={closeModal} />\n        ) : (\n          <ModalDeleteConfirmation\n            id={id}\n            name={name}\n            closeModal={closeModal}\n          />\n        )}\n      </ModalWindow>\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  status: propTypes.string.isRequired,\n  closeModal: propTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { FaUserEdit, FaUserMinus } from 'react-icons/fa';\nimport {\n  ListItem,\n  ListItemData,\n  PhoneLink,\n  BtnsWrapper,\n  AvatarWrapper,\n  DataWrapper,\n} from './ContactItem.styled';\nimport { Btn } from '../Btn/Btn';\nimport Avatar from '../../images/user-icons.gif';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [statusModal, setStatusModal] = useState('');\n\n  const toggleModal = status => {\n    setShowModal(!showModal);\n    setStatusModal(status);\n  };\n\n  return (\n    <ListItem>\n      <AvatarWrapper>\n        <img src={Avatar} alt={name} width=\"48\" />\n      </AvatarWrapper>\n      <ListItemData>\n        <DataWrapper>\n          Name:<span> {name} </span>\n        </DataWrapper>\n        <DataWrapper>\n          Phone:{' '}\n          <PhoneLink href={`tel:${number}`}>\n            <span>{number}</span>\n          </PhoneLink>\n        </DataWrapper>\n      </ListItemData>\n      <BtnsWrapper>\n        <Btn\n          icon={FaUserMinus}\n          type=\"button\"\n          status=\"delete\"\n          text=\"Delete contact\"\n          onClick={() => toggleModal('delete')}\n          // onClick={() => onDeleteBtnClick(id, name)}\n        />\n        <Btn\n          icon={FaUserEdit}\n          type=\"button\"\n          status=\"edit\"\n          text=\"Edit contact\"\n          onClick={() => toggleModal('edit')}\n        />\n      </BtnsWrapper>\n      {showModal && (\n        <Modal\n          id={id}\n          closeModal={toggleModal}\n          status={statusModal}\n          name={name}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const getFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport { List } from './ContactList.styled';\nimport { ContactItem } from './CotactItem';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { getContactsItems } from 'redux/contactsSelectors';\nimport { getFilter } from 'redux/filterSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContactsItems);\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning(\n        'No contacts matching your request',\n        notifySettings\n      );\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  return (\n    <>\n      <List>\n        {filterContacts().map(contact => {\n          return (\n            <ContactItem\n              id={contact.id}\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  /* justify-content: stretch; */\n  align-items: center;\n  font-size: 16px;\n  color: rgb(1, 1, 1);\n  padding: 24px 16px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n\n  & > label {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 30vw;\n    margin-bottom: 0;\n    padding: 32px;\n    font-size: 24px;\n    width: 45vw;\n    min-width: 40vw;\n  }\n  @media screen and (min-width: 1280px) {\n    & > label {\n      flex-direction: row;\n      gap: 0;\n      justify-content: stretch;\n    }\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/filterSlice';\nimport { DebounceInput } from 'react-debounce-input';\nimport styled from 'styled-components';\n\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled';\nimport { getFilter } from 'redux/filterSelectors';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  width: 75%;\n  border-radius: 8px;\n  font-size: 12px;\n  placeholder: grey;\n  padding: 8px 12px;\n  outline-color: yellow;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    padding: 12px 16px;\n    margin-left: 16px;\n  }\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contact by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 0 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width: 100%; */\n  flex-direction: column;\n  color: #010101;\n\n  @media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 42px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 0 62px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 16px;\n  text-transform: uppercase;\n  margin-top: 0;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 28px;\n  }\n`;\n","import ScrollToTop from 'react-scroll-up';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { getLoadingStatus } from 'redux/authSelectors';\nimport { Container, SubHeader } from './Contacts.styled';\nimport Arrow from '../../images/arrowUp.png';\n\nexport const Contacts = () => {\n  const loader = useSelector(getLoadingStatus);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <div>\n        <SubHeader>Add new contact</SubHeader>\n        <ContactForm />\n      </div>\n      <div>\n        <SubHeader>Your contacts</SubHeader>\n        <Filter />\n        <ContactList />\n      </div>\n      <ScrollToTop\n        showUnder={160}\n        style={{\n          bottom: 40,\n          right: 40,\n        }}\n      >\n        <img alt=\"arrow up\" width=\"35\" srcSet={Arrow} />\n      </ScrollToTop>\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","InputItem","type","name","placeholder","pattern","title","onChange","value","required","getContactsItems","state","contacts","items","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","onInputChange","event","target","resetForm","onSubmit","preventDefault","find","contact","toLocaleLowerCase","Notiflix","notifySettings","addContact","Btn","icon","FaUserPlus","status","text","List","PhoneLink","BtnsWrapper","AvatarWrapper","ListItem","ListItemData","DataWrapper","ModalOverlay","ModalWindow","ContentWrapper","ListItemForm","InputWrapper","ModalForm","id","closeModal","currentContact","src","Avatar","alt","updateContact","FaUserCheck","TextWrapper","Hint","ConfirmationText","ModalDeleteConfirmation","MdDelete","onClick","deleteContact","modalRoot","document","querySelector","Modal","useEffect","onEscPress","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ContactItem","showModal","setShowModal","statusModal","setStatusModal","toggleModal","width","href","FaUserMinus","FaUserEdit","getFilter","filter","ContactList","fetchContacts","query","filteredContacts","includes","length","filterContacts","map","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","SubHeader","Contacts","loader","getLoadingStatus","Loader","showUnder","style","bottom","right","srcSet","Arrow"],"sourceRoot":""}