{"version":3,"file":"static/js/86.d3328963.chunk.js","mappings":"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","sources":["components/Btn/Btn.styled.jsx","components/Btn/Btn.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/InputItem.styled.jsx","components/ContactForm/InputItem.jsx","redux/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactItem.styled.jsx","components/ContactList/CotactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  padding: 8px 16px;\n  font-size: 24px;\n  font-weight: bold;\n  border: none;\n  background-color: #cab1c79d;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n  transform: scale(1);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    background-color: ${props =>\n      props.status === 'add'\n        ? 'rgba(0, 128, 75, 0.7)'\n        : props.status === 'login'\n        ? 'rgba(71, 207, 150, 0.7)'\n        : props.status === 'register'\n        ? 'rgba(248, 220, 92, 0.7)'\n        : 'rgba(202, 30, 30, 0.6)'};\n    box-shadow: 0px 14px 6px 4px #cab1b98c;\n  }\n  &:active {\n    transform: scale(1.2);\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BtnElement } from './Btn.styled';\n\nexport const Btn = ({\n  text,\n  status,\n  disabled = false,\n  icon: Icon = null,\n  type = 'button',\n  onClick = null,\n  onSubmit = null,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      onSubmit={onSubmit}\n    >\n      {Icon && <Icon></Icon>}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 30vw;\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  font-size: 24px;\n  color: #010101;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","export const getContactsItems = state => state.contacts.items;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { MdPersonAddAlt1 } from 'react-icons/md';\nimport { addContact } from '../../redux/contactsOperations';\nimport { Form, Label } from './ContactForm.styled';\nimport { Btn } from '../Btn/Btn';\nimport { InputItem } from './InputItem';\nimport { notifySettings } from '../../utils/notifySettings';\nimport { getContactsItems } from 'redux/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactsItems);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning(\n        `${name} is already in contacts`,\n        notifySettings\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <Btn\n        type=\"submit\"\n        icon={MdPersonAddAlt1}\n        status=\"add\"\n        text=\"Add contact\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  min-width: 50vw;\n  display: flex;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.1);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const ListItemData = styled.p`\n  font-size: 24px;\n  margin-right: 36px;\n`;\n","import PropTypes from 'prop-types';\nimport { MdPersonRemoveAlt1 } from 'react-icons/md';\nimport { ListItem, ListItemData } from './ContactItem.styled';\nimport { Btn } from '../Btn/Btn';\n\nexport const ContactItem = ({ id, name, number, onDeleteBtnClick }) => {\n  return (\n    <ListItem>\n      <ListItemData>\n        {name}: {number}\n      </ListItemData>\n      <Btn\n        icon={MdPersonRemoveAlt1}\n        type=\"button\"\n        status=\"delete\"\n        text=\"Delete contact\"\n        onClick={() => onDeleteBtnClick(id, name)}\n      />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport { List } from './ContactList.styled';\nimport { ContactItem } from './CotactItem';\nimport { fetchContacts, deleteContact } from 'redux/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning(\n        'No contacts matching your request',\n        notifySettings\n      );\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  return (\n    <List>\n      {filterContacts().map(contact => {\n        return (\n          <ContactItem\n            id={contact.id}\n            key={contact.id}\n            name={contact.name}\n            number={contact.number}\n            onDeleteBtnClick={() => dispatch(deleteContact(contact.id))}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  min-width: 50vw;\n  display: flex;\n  justify-content: stretch;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/filterSlice';\nimport { DebounceInput } from 'react-debounce-input';\nimport styled from 'styled-components';\n\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  padding: 40px;\n`;\n\nexport const MainHeader = styled.h1`\n  font-size: 42px;\n  color: #010101;\n  text-transform: uppercase;\n`;\n\nexport const SubHeader = styled.h2`\n  font-size: 36px;\n  color: #010101;\n  text-transform: uppercase;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { getLoadingStatus } from 'redux/authSelectors';\nimport { Container, MainHeader, SubHeader } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const loader = useSelector(getLoadingStatus);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <MainHeader>Phonebook</MainHeader>\n      <ContactForm />\n      <SubHeader>Contacts</SubHeader>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n"],"names":["BtnElement","styled","props","status","Btn","text","disabled","icon","Icon","type","onClick","onSubmit","Form","Label","Input","InputItem","name","placeholder","pattern","title","onChange","value","required","getContactsItems","state","contacts","items","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","onInputChange","event","target","resetForm","preventDefault","find","contact","toLocaleLowerCase","Notiflix","notifySettings","addContact","MdPersonAddAlt1","List","ListItem","ListItemData","ContactItem","id","onDeleteBtnClick","MdPersonRemoveAlt1","ContactList","useEffect","fetchContacts","filter","query","filteredContacts","includes","length","filterContacts","map","deleteContact","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","MainHeader","SubHeader","Contacts","loader","getLoadingStatus","Loader"],"sourceRoot":""}