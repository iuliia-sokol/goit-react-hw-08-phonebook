{"version":3,"file":"static/js/453.ccc37bb1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/InputItem.styled.jsx","components/ContactForm/InputItem.jsx","redux/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactItem.styled.jsx","components/ContactList/CotactItem.jsx","redux/filterSelectors.js","components/Modal/Modal.styled.jsx","components/Modal/ModalForm.styled.jsx","components/Modal/ModalForm.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 30vw;\n  height: fit-content;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n  font-size: 24px;\n  color: #010101;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  font-weight: bold;\n  font-size: 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import PropTypes from 'prop-types';\nimport { Input } from './InputItem.styled';\n\nexport const InputItem = ({\n  type = 'text',\n  name,\n  placeholder,\n  pattern,\n  title,\n  onChange,\n  value,\n}) => {\n  return (\n    <Input\n      onChange={onChange}\n      value={value}\n      placeholder={placeholder}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n    />\n  );\n};\n\nInputItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","export const getContactsItems = state => state.contacts.items;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { MdPersonAddAlt1 } from 'react-icons/md';\nimport { addContact } from '../../redux/contactsOperations';\nimport { Form, Label } from './ContactForm.styled';\nimport { Btn } from '../Btn/Btn';\nimport { InputItem } from './InputItem';\nimport { notifySettings } from '../../utils/notifySettings';\nimport { getContactsItems } from 'redux/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactsItems);\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const includesName = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (includesName) {\n      return Notiflix.Notify.warning(\n        `${name} is already in contacts`,\n        notifySettings\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <InputItem\n          onChange={onInputChange}\n          value={name}\n          name=\"name\"\n          placeholder=\"Enter contact`s name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n      <Label>\n        Number\n        <InputItem\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter contact`s number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n      </Label>\n      <Btn\n        type=\"submit\"\n        icon={MdPersonAddAlt1}\n        status=\"add\"\n        text=\"Add contact\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const PhoneLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n\n  & > span {\n    font-weight: normal;\n  }\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\nexport const ListItem = styled.li`\n  min-width: 50vw;\n  display: flex;\n  font-weight: bold;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.1);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const ListItemData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  font-size: 24px;\n  margin-right: 36px;\n  border-radius: 12px;\n  padding: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const DataWrapper = styled.div`\n  & > span {\n    font-weight: normal;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdPersonRemoveAlt1 } from 'react-icons/md';\nimport {\n  ListItem,\n  ListItemData,\n  PhoneLink,\n  BtnsWrapper,\n  AvatarWrapper,\n  DataWrapper,\n} from './ContactItem.styled';\nimport { Btn } from '../Btn/Btn';\nimport Avatar from '../../images/woman.png';\n\nexport const ContactItem = ({\n  id,\n  name,\n  number,\n  onDeleteBtnClick,\n  toggleModal,\n}) => {\n  return (\n    <ListItem>\n      <AvatarWrapper>\n        <img src={Avatar} alt={name} width=\"48\" />\n      </AvatarWrapper>\n      <ListItemData>\n        <DataWrapper>\n          Name:<span> {name} </span>\n        </DataWrapper>\n        <DataWrapper>\n          Phone:{' '}\n          <PhoneLink href={`tel:${number}`}>\n            <span>{number}</span>\n          </PhoneLink>\n        </DataWrapper>\n      </ListItemData>\n      <BtnsWrapper>\n        <Btn\n          icon={MdPersonRemoveAlt1}\n          type=\"button\"\n          status=\"delete\"\n          text=\"Delete contact\"\n          onClick={() => onDeleteBtnClick(id, name)}\n        />\n        <Btn\n          icon={MdPersonRemoveAlt1}\n          type=\"button\"\n          status=\"edit\"\n          text=\"Edit contact\"\n          onClick={() => toggleModal(id)}\n        />\n      </BtnsWrapper>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteBtnClick: PropTypes.func.isRequired,\n};\n","export const getFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  height: fit-content;\n  width: fit-content;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  opacity: 1;\n`;\n","import styled from 'styled-components';\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const AvatarWrapper = styled.div`\n  border-radius: 50%;\n  padding: 12px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\nexport const ListItem = styled.div`\n  min-width: 50vw;\n  display: flex;\n  font-weight: bold;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const ListItemForm = styled.form`\n  padding: 32px;\n  font-size: 24px;\n  color: #010101;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* flex-direction: column; */\n  gap: 16px;\n  font-size: 24px;\n\n  border-radius: 12px;\n\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n","import { useState } from 'react';\nimport { FaUserEdit } from 'react-icons/fa';\n\nimport {\n  AvatarWrapper,\n  // BtnsWrapper,\n  InputWrapper,\n  Input,\n  Label,\n  ListItem,\n  ListItemForm,\n} from './ModalForm.styled';\nimport Avatar from '../../images/woman.png';\nimport { Btn } from 'components/Btn/Btn';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contactsOperations';\n\nexport const ModalForm = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // const includesName = contacts.find(\n    //   contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    // );\n\n    // if (includesName) {\n    //   return Notiflix.Notify.warning(\n    //     `${name} is already in contacts`,\n    //     notifySettings\n    //   );\n    // }\n\n    dispatch(updateContact({ id, name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ListItem>\n      <AvatarWrapper>\n        <img src={Avatar} alt=\"avatar\" width=\"48\" />\n      </AvatarWrapper>\n      <ListItemForm onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Label>\n            New name:\n            <Input\n              onChange={onInputChange}\n              value={name}\n              name=\"name\"\n              placeholder=\"Enter contact`s name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n          </Label>\n          <Label>\n            New phone:\n            <Input\n              onChange={onInputChange}\n              value={number}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter contact`s number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n          </Label>\n        </InputWrapper>\n        <Btn\n          icon={FaUserEdit}\n          type=\"submit\"\n          status=\"update\"\n          text=\"Update contact\"\n        />\n      </ListItemForm>\n    </ListItem>\n  );\n};\n\nModalForm.propTypes = {\n  // src: propTypes.string.isRequired,\n  // alt: propTypes.string.isRequired,\n  //   closeModal: propTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\n\nimport { ModalOverlay, ModalWindow } from './Modal.styled';\n\nimport { ModalForm } from './ModalForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ id, closeModal }) => {\n  useEffect(() => {\n    const onEscPress = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', onEscPress);\n    };\n  }, [closeModal]);\n\n  const onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={onBackdropClick}>\n      <ModalWindow>\n        <ModalForm id={id} />\n      </ModalWindow>\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  // src: propTypes.string.isRequired,\n  // alt: propTypes.string.isRequired,\n  closeModal: propTypes.func.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from '../../utils/notifySettings';\n\nimport { List } from './ContactList.styled';\nimport { ContactItem } from './CotactItem';\nimport { fetchContacts, deleteContact } from 'redux/contactsOperations';\nimport { getContactsItems } from 'redux/contactsSelectors';\nimport { getFilter } from 'redux/filterSelectors';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const ContactList = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContactsItems);\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    const query = filter.toLocaleLowerCase();\n\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(query)\n    );\n\n    if (query && !filteredContacts.length) {\n      Notiflix.Notify.warning(\n        'No contacts matching your request',\n        notifySettings\n      );\n      return [];\n    }\n    return filteredContacts;\n  };\n\n  return (\n    <>\n      <List>\n        {filterContacts().map(contact => {\n          return (\n            <ContactItem\n              id={contact.id}\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDeleteBtnClick={() => dispatch(deleteContact(contact.id))}\n              toggleModal={toggleModal}\n            />\n          );\n        })}\n      </List>\n      {showModal && <Modal closeModal={toggleModal} />}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  min-width: 50vw;\n  display: flex;\n  justify-content: stretch;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  padding: 32px;\n  border-radius: 12px;\n  background-color: hsla(215, 98%, 79%, 0.2);\n  border: 2px solid blanchedalmond;\n  box-shadow: 10px 12px 12px 0px #cab1b14d;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/filterSlice';\nimport { DebounceInput } from 'react-debounce-input';\nimport styled from 'styled-components';\n\nimport { FilterWrapper } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled';\nimport { getFilter } from 'redux/filterSelectors';\n\nconst FilterInput = styled(DebounceInput)`\n  min-width: 50%;\n  border-radius: 8px;\n  font-size: 20px;\n  placeholder: grey;\n  padding: 12px 16px;\n  margin-left: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n`;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <FilterWrapper>\n      <Label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact to search\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          debounceTimeout={500}\n        />\n      </Label>\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  padding: 0 40px;\n`;\n\nexport const MainHeader = styled.h2`\n  font-size: 42px;\n  color: #010101;\n  text-transform: uppercase;\n`;\n\nexport const SubHeader = styled.h3`\n  font-size: 36px;\n  color: #010101;\n  text-transform: uppercase;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { getLoadingStatus } from 'redux/authSelectors';\nimport { Container, MainHeader, SubHeader } from './Contacts.styled';\n\nexport const Contacts = () => {\n  const loader = useSelector(getLoadingStatus);\n  return (\n    <Container>\n      {loader && <Loader />}\n      <MainHeader>Phonebook</MainHeader>\n      <ContactForm />\n      <SubHeader>Contacts</SubHeader>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","InputItem","type","name","placeholder","pattern","title","onChange","value","required","getContactsItems","state","contacts","items","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","onInputChange","event","target","resetForm","onSubmit","preventDefault","find","contact","toLocaleLowerCase","Notiflix","notifySettings","addContact","Btn","icon","MdPersonAddAlt1","status","text","List","PhoneLink","BtnsWrapper","AvatarWrapper","ListItem","ListItemData","DataWrapper","ContactItem","id","onDeleteBtnClick","toggleModal","src","Avatar","alt","width","href","MdPersonRemoveAlt1","onClick","getFilter","filter","ModalOverlay","ModalWindow","ListItemForm","InputWrapper","ModalForm","updateContact","FaUserEdit","modalRoot","document","querySelector","Modal","closeModal","useEffect","onEscPress","code","window","addEventListener","removeEventListener","createPortal","currentTarget","ContactList","showModal","setShowModal","fetchContacts","query","filteredContacts","includes","length","filterContacts","map","deleteContact","FilterWrapper","FilterInput","DebounceInput","Filter","e","filterContact","debounceTimeout","Container","MainHeader","SubHeader","Contacts","loader","getLoadingStatus","Loader"],"sourceRoot":""}